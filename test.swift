/*
 * (c) Kotiki, 2015
 *
 * Generated by 🔥🍑🔥 Burning Bottom 0.0.1
 * ⚠️ Do not edit! ⚠️
 */

public func followUserWithId2()
            -> AnswerNotify {
    let hello = 2
    let x = [hello, 1, 2, 3]
}

public func followUserWithId3(
                userId: String,
                anotherId: String)
            -> Void {
    let hello = 2
    let x = [hello, 1, 2, 3]
}

public struct User {
    public let id: String,
    public let name: String,
    public let sex: Int,
    public let age: Int,
    public let city: String,
    public let photoId: String,
    public let photoURL: NSURL,
    public let thumbnailURL: NSURL,
    public let onlineStatus: String,
    public let isFollowed: Bool

    public init(json: [String : AnyObject]) {
        guard let id = json["id"] as? String,
              let name = json["name"] as? String,
              let sex = json["sex"] as? Int,
              let age = json["age"] as? Int,
              let city = json["city"] as? String,
              let photoId = json["photo_id"] as? String,
              let photoURL = json["photo"] as? NSURL,
              let thumbnailURL = json["photo_small"] as? NSURL,
              let onlineStatus = json["online_state"] as? String,
              let isFollowed = json["is_following"] as? Bool
        else {
            return nil
        }
        self.id = id
        self.name = name
        self.sex = sex
        self.age = age
        self.city = city
        self.photoId = photoId
        self.photoURL = photoURL
        self.thumbnailURL = thumbnailURL
        self.onlineStatus = onlineStatus
        self.isFollowed = isFollowed
    }
}

public struct MessageNotify {
    public let timestamp: Int,
    public let lastMessage: String,
    public let userId: String,
    public let isLastMessageFromUser: Bool,
    public let bi: String,
    public let unreadCount: String

    public init(json: [String : AnyObject]) {
        guard let timestamp = json["date"] as? Int,
              let lastMessage = json["text"] as? String,
              let userId = json["userId"] as? String,
              let isLastMessageFromUser = json["ourLast"] as? Bool,
              let bi = json["bi"] as? String,
              let unreadCount = json["unreadCount"] as? String
        else {
            return nil
        }
        self.timestamp = timestamp
        self.lastMessage = lastMessage
        self.userId = userId
        self.isLastMessageFromUser = isLastMessageFromUser
        self.bi = bi
        self.unreadCount = unreadCount
    }
}

public struct AnswerNotify: PushX, Some {
    public let timestamp: Int,
    public let lastMessage: String,
    public let userId: String,
    public let isLastMessageFromUser: Bool,
    public let bi: String,
    public let unreadCount: String

    public init(json: [String : AnyObject]) {
        guard let timestamp = json["date"] as? Int,
              let lastMessage = json["text"] as? String,
              let userId = json["userId"] as? String,
              let isLastMessageFromUser = json["ourLast"] as? Bool,
              let bi = json["bi"] as? String,
              let unreadCount = json["unreadCount"] as? String
        else {
            return nil
        }
        self.timestamp = timestamp
        self.lastMessage = lastMessage
        self.userId = userId
        self.isLastMessageFromUser = isLastMessageFromUser
        self.bi = bi
        self.unreadCount = unreadCount
    }
}

public struct FollowerNotify {
    public let timestamp: Int,
    public let lastMessage: String,
    public let userId: String,
    public let isFacebookFriend: Bool,
    public let bi: String,
    public let unreadCount: String

    public init(json: [String : AnyObject]) {
        guard let timestamp = json["date"] as? Int,
              let lastMessage = json["text"] as? String,
              let userId = json["userId"] as? String,
              let isFacebookFriend = json["is_facebook"] as? Bool,
              let bi = json["bi"] as? String,
              let unreadCount = json["unreadCount"] as? String
        else {
            return nil
        }
        self.timestamp = timestamp
        self.lastMessage = lastMessage
        self.userId = userId
        self.isFacebookFriend = isFacebookFriend
        self.bi = bi
        self.unreadCount = unreadCount
    }
}

public struct UserMeta {
    public let messagesBadge: Int,
    public let messagesViewTimestamp: NSTimeInterval,
    public let answersBadge: Int,
    public let answersViewTimestamp: NSTimeInterval,
    public let followersBadge: Int,
    public let followersViewTimestamp: NSTimeInterval

    public init(json: [String : AnyObject]) {
        self.messagesBadge = (json["notify_badge_messages"] as? Int) ?? 0
        self.messagesViewTimestamp = (json["notify_last_read_messages"] as? NSTimeInterval) ?? 0
        self.answersBadge = (json["notify_last_read_people"] as? Int) ?? 0
        self.answersViewTimestamp = (json["notify_last_read_quizzes"] as? NSTimeInterval) ?? 0
        self.followersBadge = (json["notify_badge_people"] as? Int) ?? 0
        self.followersViewTimestamp = (json["notify_last_read_people"] as? NSTimeInterval) ?? 0
    }
}

public struct Contact {
    public let userId: String,
    public let socialFirstName: String?,
    public let socialLastName: String?,
    public let isSocialFriend: Bool,
    public let bi: String

    public init(json: [String : AnyObject]) {
        guard let userId = json["user_id"] as? String,
              let bi = json["bi"] as? String
        else {
            return nil
        }
        self.userId = userId
        self.bi = bi
        self.socialFirstName = json["social_first_name"] as? String
        self.socialLastName = json["social_last_name"] as? String
        self.isSocialFriend = (json["is_social_friend"] as? Bool) ?? false
    }
}

